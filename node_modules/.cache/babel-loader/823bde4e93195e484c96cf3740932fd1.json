{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subed\\\\OneDrive\\\\Javascript\\\\01-starting-setup\\\\src\\\\components\\\\UI\\\\Button\\\\Demo\\\\DemoOutput.js\";\nimport React from \"react\";\nimport MyParagraph from \"./MyParagraph\"; // App component re-evaluates because of state management\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DemoOutput = props => {\n  console.log(\"Demo-output\"); // props changes with every click\n\n  return /*#__PURE__*/_jsxDEV(MyParagraph, {\n    children: props.show ? \"This is new\" : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this); // myparagraph is a child component of Demo output. Demo output is a child component of App. since app is re-evalauted,\n  // demo ouput will also re- evaluate, and which will then re-evaluate my paragraph\n  // this continues down the component tree -\n  // this costs performance, so how to prevent unnecessary re-evaluations? - use React.memo() for functional components\n};\n\n_c = DemoOutput;\nexport default _c2 = /*#__PURE__*/React.memo(DemoOutput);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DemoOutput\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","MyParagraph","DemoOutput","props","console","log","show","memo"],"sources":["C:/Users/subed/OneDrive/Javascript/01-starting-setup/src/components/UI/Button/Demo/DemoOutput.js"],"sourcesContent":["import React from \"react\";\r\nimport MyParagraph from \"./MyParagraph\";\r\n\r\n// App component re-evaluates because of state management\r\nconst DemoOutput = (props) => {\r\n  console.log(\"Demo-output\"); // props changes with every click\r\n  return <MyParagraph>{props.show ? \"This is new\" : \"\"}</MyParagraph>;\r\n\r\n  // myparagraph is a child component of Demo output. Demo output is a child component of App. since app is re-evalauted,\r\n  // demo ouput will also re- evaluate, and which will then re-evaluate my paragraph\r\n  // this continues down the component tree -\r\n  // this costs performance, so how to prevent unnecessary re-evaluations? - use React.memo() for functional components\r\n};\r\n\r\nexport default React.memo(DemoOutput);\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CAEA;;;;AACA,MAAMC,UAAU,GAAIC,KAAD,IAAW;EAC5BC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAD4B,CACA;;EAC5B,oBAAO,QAAC,WAAD;IAAA,UAAcF,KAAK,CAACG,IAAN,GAAa,aAAb,GAA6B;EAA3C;IAAA;IAAA;IAAA;EAAA,QAAP,CAF4B,CAI5B;EACA;EACA;EACA;AACD,CARD;;KAAMJ,U;AAUN,kCAAeF,KAAK,CAACO,IAAN,CAAWL,UAAX,CAAf"},"metadata":{},"sourceType":"module"}